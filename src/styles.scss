// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$zoom-wrapper-primary: mat.define-palette(mat.$indigo-palette);
$zoom-wrapper-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$zoom-wrapper-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$zoom-wrapper-theme: mat.define-light-theme(
  (
    color: (
      primary: $zoom-wrapper-primary,
      accent: $zoom-wrapper-accent,
      warn: $zoom-wrapper-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($zoom-wrapper-theme);

.zmwebsdk-makeStyles-root-19,
.zmwebsdk-makeStyles-root-26,
.zmwebsdk-makeStyles-root-55,
.zmwebsdk-makeStyles-root-906,
.zmwebsdk-makeStyles-root-1109,
.zmwebsdk-makeStyles-root-1114 {
  height: 33rem !important;
  width: 33rem !important;
  @media (max-width: 600px) {
    height: 22rem !important;
    width: 16rem !important;
  }
}
.zmwebsdk-makeStyles-panel-92,
.zmwebsdk-makeStyles-panel-85 {
  transform: translate(0px, -347px) !important;
}
#zmmtg-root {
  // z-index: -1;
  background-color: transparent !important;
}
.video-avatar__avatar-name {
  overflow: initial !important;
}
.zmwebsdk-makeStyles-panel-85 {
  width: 300px !important;
}
.zmwebsdk-makeStyles-panel-88 {
  width: 300px !important;
}
html,
body {
  height: 100%;
  min-width: auto !important;
}
body {
  margin: 0;
  min-width: auto !important;
}
.align-middle .av-preview-container {
  width: auto !important;
}
#participant-window,
#chat-window {
  width: 300px !important;
}
.third-part-app-info__panel,
.meeting-info-icon__meeting-paper {
  width: 320px !important;
}
.zmwebsdk-makeStyles-root-79,
.zmwebsdk-makeStyles-root-85,
.zmwebsdk-makeStyles-panel-102 {
  min-width: auto !important;
  width: fit-content !important;
}
@media (max-width: 600px) {
  .ReactVirtualized__List {
    width: 230px !important;
    height: 300px !important;
  }
}
